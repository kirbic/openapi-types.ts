/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/shop/": {
    /** Info about shop in **x-shopcopter-shop** header */
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/shop/all": {
    get: {
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/shop/create": {
    /** Use this method to create a new shop instance. See [pricing](https://docs.kirbic.com/pricing) for more info. */
    post: {
      responses: {
        /** Default Response */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            site_url: string;
            description?: string;
            brandy_id?: string;
            admin_email?: string;
          };
        };
      };
    };
  };
  "/catalog/product/": {
    get: {
      parameters: {
        query: {
          collection_slug?: string;
          collection_id?: string;
        };
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** collection of products */
        200: {
          content: {
            "application/json": {
              items: {
                id: string;
                name: string;
                slug: string;
                description: string;
                description_short: string;
                prices: {
                  id: string;
                  name?: string;
                  /** currency */
                  currency: "EUR" | "USD";
                  /** unit */
                  unit_type: "pallet" | "box" | "units" | "item" | "pack";
                  unit_amount: number;
                  active: boolean;
                  product_id: string;
                  metadata?: { [key: string]: any };
                }[];
                vendor?: string;
                tags: string[];
                active: boolean;
                metadata?: { [key: string]: any };
              }[];
              metadata?: {
                /** collection of products */
                collection?: {
                  id: string;
                  slug: string;
                  name: string;
                  description: string;
                  tags: string[];
                };
              };
            } & { [key: string]: any };
          };
        };
      };
    };
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** a product in the dashboard */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              slug: string;
              description: string;
              description_short: string;
              prices: {
                id: string;
                name?: string;
                /** currency */
                currency: "EUR" | "USD";
                /** unit */
                unit_type: "pallet" | "box" | "units" | "item" | "pack";
                unit_amount: number;
                active: boolean;
                product_id: string;
                metadata?: { [key: string]: any };
              }[];
              vendor?: string;
              tags: string[];
              active: boolean;
              metadata?: { [key: string]: any };
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            description_short?: string;
            prices: components["schemas"]["def-3"][];
            vendor?: string;
            tags?: string[];
          };
        };
      };
    };
  };
  "/catalog/product/{product_id_or_slug}": {
    get: {
      parameters: {
        path: {
          product_id_or_slug: string;
        };
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** a product in the dashboard */
        200: {
          content: {
            "application/json": {
              id: string;
              name: string;
              slug: string;
              description: string;
              description_short: string;
              prices: {
                id: string;
                name?: string;
                /** currency */
                currency: "EUR" | "USD";
                /** unit */
                unit_type: "pallet" | "box" | "units" | "item" | "pack";
                unit_amount: number;
                active: boolean;
                product_id: string;
                metadata?: { [key: string]: any };
              }[];
              vendor?: string;
              tags: string[];
              active: boolean;
              metadata?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/catalog/product/{product_id}": {
    post: {
      parameters: {
        path: {
          product_id: string;
        };
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": {
            active?: boolean;
            name?: string;
            description?: string;
            description_short?: string;
            vendor?: string;
            tags?: string[];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          product_id: string;
        };
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/catalog/price/{product_id}": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/catalog/collection/": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** collection of products */
        200: {
          content: {
            "application/json": {
              items: {
                id: string;
                slug: string;
                name: string;
                description: string;
                tags: string[];
              }[];
            } & { [key: string]: any };
          };
        };
      };
    };
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** collection of products */
        200: {
          content: {
            "application/json": {
              id: string;
              slug: string;
              name: string;
              description: string;
              tags: string[];
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            slug?: string;
            tags: string[];
          };
        };
      };
    };
  };
  "/catalog/collection/tags": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** collection of products */
        200: {
          content: {
            "application/json": {
              items: {
                id: string;
                slug: string;
                name: string;
                description: string;
                tags: string[];
              }[];
            } & { [key: string]: any };
          };
        };
      };
    };
  };
  "/catalog/collection/{collection_id}": {
    delete: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/media/upload": {
    get: {
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/cart/": {
    /** Get the user shopping cart for this specific shop and user */
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** a cart in kirbic */
        200: {
          content: {
            "application/json": {
              id: string;
              shop_id: string;
              lines: {
                /** A price associated with a product */
                price: {
                  id: string;
                  name?: string;
                  /** currency */
                  currency: "EUR" | "USD";
                  /** unit */
                  unit_type: "pallet" | "box" | "units" | "item" | "pack";
                  unit_amount: number;
                  active: boolean;
                  product_id: string;
                  metadata?: { [key: string]: any };
                };
                /** a product in the dashboard */
                product: {
                  id: string;
                  name: string;
                  slug: string;
                  description: string;
                  description_short: string;
                  prices: {
                    id: string;
                    name?: string;
                    /** currency */
                    currency: "EUR" | "USD";
                    /** unit */
                    unit_type: "pallet" | "box" | "units" | "item" | "pack";
                    unit_amount: number;
                    active: boolean;
                    product_id: string;
                    metadata?: { [key: string]: any };
                  }[];
                  vendor?: string;
                  tags: string[];
                  active: boolean;
                  metadata?: { [key: string]: any };
                };
                quantity: number;
              }[];
              total: string;
              metadata?: { [key: string]: any };
            };
          };
        };
      };
    };
    /** Empty the current cart */
    delete: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/cart/{mode}/{price_id}": {
    /**
     * Add, remove, update lines from kirbic cart
     *
     * Operation modes:
     * - `add` adds a price to the cart in specified `quantity`.
     *     * If `price_id` is already in cart, `quantity` is added to actual value.
     *     * If `price_id` is not already in cart `quantity` is setted.
     *     * Throws an error if total quantity exceeds `rule:max_quantity_in_cart`
     * - `remove` removes a price from the cart in specified `quantity`.
     *     * If `price` is already in cart, `quantity` is removed to actual value.
     *     * If `price` is not already in cart `quantity` is setted.
     *     * If total quantity of 0 is reached `price_id` is deleted from actual cart.
     *     * Throws an error if total quantity is less than `rule:min_quantity_in_cart`
     * - `set` sets the total quantity for this `price_id`. Creates it if not exists.
     * - `delete` deletesthe `price_id` line from the cart. `quantity` is ignored
     */
    patch: {
      parameters: {
        path: {
          price_id: string;
          mode: "add" | "remove" | "set" | "delete";
        };
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** a cart in kirbic */
        200: {
          content: {
            "application/json": {
              id: string;
              shop_id: string;
              lines: {
                /** A price associated with a product */
                price: {
                  id: string;
                  name?: string;
                  /** currency */
                  currency: "EUR" | "USD";
                  /** unit */
                  unit_type: "pallet" | "box" | "units" | "item" | "pack";
                  unit_amount: number;
                  active: boolean;
                  product_id: string;
                  metadata?: { [key: string]: any };
                };
                /** a product in the dashboard */
                product: {
                  id: string;
                  name: string;
                  slug: string;
                  description: string;
                  description_short: string;
                  prices: {
                    id: string;
                    name?: string;
                    /** currency */
                    currency: "EUR" | "USD";
                    /** unit */
                    unit_type: "pallet" | "box" | "units" | "item" | "pack";
                    unit_amount: number;
                    active: boolean;
                    product_id: string;
                    metadata?: { [key: string]: any };
                  }[];
                  vendor?: string;
                  tags: string[];
                  active: boolean;
                  metadata?: { [key: string]: any };
                };
                quantity: number;
              }[];
              total: string;
              metadata?: { [key: string]: any };
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** quantity to add, or remove */
            quantity?: number;
          };
        };
      };
    };
  };
  "/cart/metadata": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** a cart in kirbic */
        200: {
          content: {
            "application/json": {
              id: string;
              shop_id: string;
              lines: {
                /** A price associated with a product */
                price: {
                  id: string;
                  name?: string;
                  /** currency */
                  currency: "EUR" | "USD";
                  /** unit */
                  unit_type: "pallet" | "box" | "units" | "item" | "pack";
                  unit_amount: number;
                  active: boolean;
                  product_id: string;
                  metadata?: { [key: string]: any };
                };
                /** a product in the dashboard */
                product: {
                  id: string;
                  name: string;
                  slug: string;
                  description: string;
                  description_short: string;
                  prices: {
                    id: string;
                    name?: string;
                    /** currency */
                    currency: "EUR" | "USD";
                    /** unit */
                    unit_type: "pallet" | "box" | "units" | "item" | "pack";
                    unit_amount: number;
                    active: boolean;
                    product_id: string;
                    metadata?: { [key: string]: any };
                  }[];
                  vendor?: string;
                  tags: string[];
                  active: boolean;
                  metadata?: { [key: string]: any };
                };
                quantity: number;
              }[];
              total: string;
              metadata?: { [key: string]: any };
            };
          };
        };
      };
    };
  };
  "/payment/add-payment": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/order/": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/order/delete_all_orders": {
    delete: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/helpdesk/": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Helpdesk ticket created */
        201: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** registered kirbic desktype */
            desk_type: string;
            /** some sort of user identifer */
            name: string;
            /** user email */
            email: string;
            fields: components["schemas"]["def-12"];
            metadata?: { [key: string]: any };
          };
        };
      };
    };
  };
  "/address/": {
    get: {
      responses: {
        /** Address Response */
        200: {
          content: {
            "application/json": {
              addresses: {
                /** Address unique identifier */
                id: string;
                /** Nombre y apellidos */
                name: string;
                /** primera línea de la dirección */
                line_1: string;
                /** segunda línea de la dirección */
                line_2?: string;
                /** Ciudad */
                city: string;
                /** Província o región */
                state: string;
                /** codigo postal */
                zip_code: string;
                /** se puede usar para ayudar con la entrega */
                phone_number?: string;
                /** detalles para ayudar con la entrega */
                deliver_instructions?: string;
              }[];
              default_billing:
                | { [key: string]: any }
                | {
                    /** Address unique identifier */
                    id: string;
                    /** Nombre y apellidos */
                    name: string;
                    /** primera línea de la dirección */
                    line_1: string;
                    /** segunda línea de la dirección */
                    line_2?: string;
                    /** Ciudad */
                    city: string;
                    /** Província o región */
                    state: string;
                    /** codigo postal */
                    zip_code: string;
                    /** se puede usar para ayudar con la entrega */
                    phone_number?: string;
                    /** detalles para ayudar con la entrega */
                    deliver_instructions?: string;
                  };
              default_delivery:
                | { [key: string]: any }
                | {
                    /** Address unique identifier */
                    id: string;
                    /** Nombre y apellidos */
                    name: string;
                    /** primera línea de la dirección */
                    line_1: string;
                    /** segunda línea de la dirección */
                    line_2?: string;
                    /** Ciudad */
                    city: string;
                    /** Província o región */
                    state: string;
                    /** codigo postal */
                    zip_code: string;
                    /** se puede usar para ayudar con la entrega */
                    phone_number?: string;
                    /** detalles para ayudar con la entrega */
                    deliver_instructions?: string;
                  };
            };
          };
        };
      };
    };
    /** Create an address for the current user */
    post: {
      responses: {
        /** Address Response */
        200: {
          content: {
            "application/json": {
              addresses: {
                /** Address unique identifier */
                id: string;
                /** Nombre y apellidos */
                name: string;
                /** primera línea de la dirección */
                line_1: string;
                /** segunda línea de la dirección */
                line_2?: string;
                /** Ciudad */
                city: string;
                /** Província o región */
                state: string;
                /** codigo postal */
                zip_code: string;
                /** se puede usar para ayudar con la entrega */
                phone_number?: string;
                /** detalles para ayudar con la entrega */
                deliver_instructions?: string;
              }[];
              default_billing:
                | { [key: string]: any }
                | {
                    /** Address unique identifier */
                    id: string;
                    /** Nombre y apellidos */
                    name: string;
                    /** primera línea de la dirección */
                    line_1: string;
                    /** segunda línea de la dirección */
                    line_2?: string;
                    /** Ciudad */
                    city: string;
                    /** Província o región */
                    state: string;
                    /** codigo postal */
                    zip_code: string;
                    /** se puede usar para ayudar con la entrega */
                    phone_number?: string;
                    /** detalles para ayudar con la entrega */
                    deliver_instructions?: string;
                  };
              default_delivery:
                | { [key: string]: any }
                | {
                    /** Address unique identifier */
                    id: string;
                    /** Nombre y apellidos */
                    name: string;
                    /** primera línea de la dirección */
                    line_1: string;
                    /** segunda línea de la dirección */
                    line_2?: string;
                    /** Ciudad */
                    city: string;
                    /** Província o región */
                    state: string;
                    /** codigo postal */
                    zip_code: string;
                    /** se puede usar para ayudar con la entrega */
                    phone_number?: string;
                    /** detalles para ayudar con la entrega */
                    deliver_instructions?: string;
                  };
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** Nombre y apellidos */
            name?: string;
            /** primera línea de la dirección */
            line_1?: string;
            /** segunda línea de la dirección */
            line_2?: string;
            /** Ciudad */
            city?: string;
            /** Província o región */
            state?: string;
            /** codigo postal */
            zip_code?: string;
            /** se puede usar para ayudar con la entrega */
            phone_number?: string;
            /** detalles para ayudar con la entrega */
            deliver_instructions?: string;
            /** Sets the addres that you are creating as the default_billing address. This is forced to true if it's the first address created */
            default_billing?: boolean;
            /** Sets the addres that you are creating as the default_delivery address. This is forced to true if it's the first address created */
            default_delivery?: boolean;
          };
        };
      };
    };
  };
  "/address/{address_id}": {
    delete: {
      parameters: {
        path: {
          address_id: string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/paypal/complete/{session_id}": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/paypal/capture": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/paypal/session": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/webhook": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/get-public-key": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/complete/{shop_id}/{session_id}": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/register": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/unregister": {
    get: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
  "/payment/stripe/session": {
    post: {
      parameters: {
        header: {
          /** Kirbic shop identifier */
          "x-shopcopter-shop": string;
        };
      };
      responses: {
        /** Default Response */
        200: unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    /** create a collection schema */
    "def-0": {
      name: string;
      description?: string;
      slug?: string;
      tags: string[];
    };
    /** collection of products */
    "def-1": {
      items: any[];
    } & { [key: string]: any };
    /** collection of products */
    "def-2": {
      id: string;
      slug: string;
      name: string;
      description: string;
      tags: string[];
    };
    /** create a price for a product */
    "def-3": {
      name?: string;
      currency: any;
      unit_amount: number;
      unit_type: any;
      active: boolean;
      metadata: { [key: string]: any };
    };
    /** update a price object */
    "def-4": {
      _id: string;
      name?: string;
      currency?: any;
      unit_amount?: number;
      unit_type?: any;
      active?: boolean;
      metadata?: { [key: string]: any };
    };
    /** A price associated with a product */
    "def-5": {
      id: string;
      name?: string;
      /** currency */
      currency: "EUR" | "USD";
      /** unit */
      unit_type: "pallet" | "box" | "units" | "item" | "pack";
      unit_amount: number;
      active: boolean;
      product_id: string;
      metadata?: { [key: string]: any };
    };
    /** create a product */
    "def-6": {
      name: string;
      description?: string;
      description_short?: string;
      prices: any[];
      vendor?: string;
      tags?: string[];
    };
    /** get products list */
    "def-7": {
      /** a collection slug */
      collection_slug?: string;
      /** a collection identifier */
      collection_id?: string;
    };
    /** collection of products */
    "def-8": {
      items: any[];
      metadata?: {
        collection?: any;
      };
    } & { [key: string]: any };
    /** update a product */
    "def-9": {
      active?: boolean;
      name?: string;
      description?: string;
      description_short?: string;
      vendor?: string;
      tags?: string[];
    };
    /** a product in the dashboard */
    "def-10": {
      id: string;
      name: string;
      slug: string;
      description: string;
      description_short: string;
      prices: {
        id: string;
        name?: string;
        /** currency */
        currency: "EUR" | "USD";
        /** unit */
        unit_type: "pallet" | "box" | "units" | "item" | "pack";
        unit_amount: number;
        active: boolean;
        product_id: string;
        metadata?: { [key: string]: any };
      }[];
      vendor?: string;
      tags: string[];
      active: boolean;
      metadata?: { [key: string]: any };
    };
    /** create a helpdesk ticket */
    "def-11": {
      /** registered kirbic desktype */
      desk_type: string;
      /** some sort of user identifer */
      name: string;
      /** user email */
      email: string;
      fields: any;
      metadata?: { [key: string]: any };
    };
    /** Helpdesk fields */
    "def-12": {
      [key: string]: {
        label: string;
        type?: string;
        value: string;
      };
    };
    /** Helpdesk single field */
    "def-13": {
      label: string;
      type?: string;
      value: string;
    };
    /** an address of a user */
    "def-14": {
      /** Address unique identifier */
      id: string;
      /** Nombre y apellidos */
      name: string;
      /** primera línea de la dirección */
      line_1: string;
      /** segunda línea de la dirección */
      line_2?: string;
      /** Ciudad */
      city: string;
      /** Província o región */
      state: string;
      /** codigo postal */
      zip_code: string;
      /** se puede usar para ayudar con la entrega */
      phone_number?: string;
      /** detalles para ayudar con la entrega */
      deliver_instructions?: string;
    };
  };
}

export interface operations {}
